{"version":3,"sources":["LineNames.js","lib/getBounds.js","drawTooltip/displayHoverAbscissa.js","lib/formatDate.js","lib/fns/map.js","drawTooltip/tooltip.js","drawTooltip/index.js","displayLines/createPathBuilder.js","displayLines/floorNumber.js","displayLines/drawCharts.js","lib/fns/compose.js","Timeline/Timeline.js","displayLines/abscissa.js","displayLines/index.js","displayLines/displayLines.js","Chart/chart.js","Chart/index.js","chartSelector/index.js","App.js","serviceWorker.js","index.js"],"names":["LineNames","_ref","colors","names","enabled","onSwitch","onChange","evt","_evt$currentTarget","currentTarget","checked","name","state","concat","filter","_name","isChecked","includes","Object","entries","map","_ref2","_ref3","slicedToArray","key","react_default","a","createElement","className","style","color","type","getBounds","numbers","reduce","boundReducer","Infinity","number","min","max","Math","DisplayHoverAbscissa","x","height","xLabel","d","dots","yMin","yDelta","stroke","formatDate","value","Date","getFullYear","getMonth","toString","padStart","getDate","fn","tooltip","transform","renderDots","index","Label","assign","array","_ref4","drawTooltip","width","leftBound","rightBound","getX","getOrdinates","_useState","useState","_useState2","setTooltip","src_drawTooltip_tooltip","viewBox","onMouseMove","e","clientX","xCursor","xStep","length","position","parseInt","positionName","ordinates","_getBounds","all","y","_getBounds2","yMax","_ref5","onMouseOut","displayHoverAbscissa","createPathBuilder","xLength","xScale","_ordinates$map","ordinate","_ordinates$map2","toArray","_ordinates$map2$","rest","slice","floorNumber","_number_","add","arguments","undefined","n","round","divider","pow","DrawCharts","_this$props","this","props","topBound","bottomBound","step","ordinatesAxis","Array","fill","_","ordinatesLabels","pathBuilder","console","log","preserveAspectRatio","border","strokeWidth","_ref6","label","Fragment","fontSize","PureComponent","compose","_len","fns","_key","reduceRight","args","apply","valueOf","event","target","Timeline","timelinePath","setRightBound","setLeftBound","onChangeRightBound","onChangeLeftBound","timelineRef","React","createRef","ref","abscissa","abscissas","xDelta","labels","labelIndex","DisplayLines","dataSets","get","chartRef","_useState3","_useState4","_useState5","_useState6","setWidth","_useState7","_useState8","setHeight","_useState9","_useState10","chartHeight","setChartHeight","useLayoutEffect","chartContainerStyle","window","getComputedStyle","current","drawCharts_DrawCharts","createLinesMap","valueMap","values","set","Chart","accessor","active","chart","setChart","columns","keys","changeEnabled","useEffect","Map","src_displayLines","itemRender","displayChartSelector","chartNames","itemProps","handler","children","onClick","item","app","data","setActive","chartNameBuilder","chartSelector","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c18c875.chunk.js","sourcesContent":["import React from 'react';\n\nexport default LineNames;\n\nfunction LineNames ({colors, names, enabled, onSwitch}) {\n  const onChange = evt => {\n    const {\n      checked,\n      name,\n    } = evt.currentTarget;\n    onSwitch((state) => checked ? state.concat(name) : state.filter(_name => _name !== name));\n  };\n  const isChecked = name => enabled.includes(name) ? 'checked' : '';\n\n  const renderNames = ([key, name]) => {\n    return (\n      <label className=\"line-names\" style={{color: colors[key]}} key={key}>\n        {name}\n        <input checked={isChecked(key)} type=\"checkbox\" name={key} onChange={onChange}/>\n      </label>\n    )\n  };\n\n  return Object.entries(names).map(renderNames);\n}\n","export default getBounds;\n\n/**\n *\n * @param {[number]} numbers\n */\nfunction getBounds (numbers) {\n  return numbers.reduce(boundReducer, [Infinity, -Infinity])\n}\n\nfunction boundReducer ([min, max], number) {\n  return [Math.min(min, number), Math.max(max, number)];\n}\n","import React from 'react';\n\nexport default DisplayHoverAbscissa;\n\n/**\n * @todo Scale not very nice\n * @param x\n * @param xLabel\n * @param height\n * @param dots\n * @return {*}\n * @constructor\n */\nfunction DisplayHoverAbscissa ({x, xLabel, height, dots, yMin,\n                                 yDelta,}) {\n  const d = `M ${x},0 V ${height}`;\n  const ry = height / 100;\n\n  return (\n    <g>\n      <path d={d} stroke=\"lightgrey\"/>\n      {/*\n      // No way: it broken after latest changes\n        dots.map(([name, stroke, y]) => (\n          <ellipse key={name} stroke={stroke} cx={x} cy={(1 - (y - yMin) / yDelta) * height} rx=\"3\" ry={ry} fill=\"white\"/>\n        ))\n      */}\n    </g>\n  );\n}\n\n","export default function formatDate (value) {\n  const d = new Date(value);\n\n  return `${d.getFullYear()}-${(d.getMonth() + 1).toString().padStart(2, '0')}-${d.getDate().toString().padStart(2, '0')}`\n}\n","export default function (fn) {\n  return function (array) {\n    return array.map(fn);\n  }\n}\n","import React from \"react\";\nimport './tooltip.css';\nimport formatDate from \"../lib/formatDate\";\nimport map from '../lib/fns/map';\n\nexport default tooltip;\n\nconst renderDots = map(renderLabel);\n\n/**\n * @todo Add callback on mount to check and modify transform in case parentNode.clientWidth < parentNode.scrollWidth\n * @param xLabel\n * @param x\n * @param dots\n * @return {*}\n */\nfunction tooltip ({xLabel, x, dots}) {\n  if (!xLabel) return null;\n\n  return (\n    <div className=\"tooltip\" style={{transform: `translateX(${x + 10}px)`}}>\n      <h1>\n        {formatDate(xLabel)}\n      </h1>\n\n      <div className=\"tooltip-values\">\n        {renderDots(dots)}\n      </div>\n    </div>\n  )\n}\n\nfunction renderLabel ([name, color, value], index) {\n  return <Label key={index} {...{name, color, value}}/>;\n}\n\nfunction Label ({name, color, value}) {\n  return (\n    <div style={{color}}>\n      {value}\n      <small>\n        {name}\n      </small>\n    </div>\n  );\n}\n","import DisplayHoverAbscissa from \"./displayHoverAbscissa\";\nimport React, {useState} from \"react\";\nimport Tooltip from './tooltip';\nimport './tooltip.css';\nimport getBounds from \"../lib/getBounds\";\n\nexport default drawTooltip;\n\nfunction drawTooltip ({width, height, leftBound, rightBound, getX, getOrdinates}) {\n  const [tooltip, setTooltip] = useState(null);\n\n  /*\n    const cursor = enabled.map(name => {\n      const y = dataSets.get(name).slice(leftBound, rightBound + 1);\n      const stroke = colors[name];\n      const pathBuilder = getPathBuilder(width / y.length, yMin, yMax, height / (yMax - yMin));\n\n      return [name, stroke, y, pathBuilder(y)];\n    });\n  */\n\n  const showTooltip = e => {\n    const {\n      clientX,\n    } = e;\n    const xCursor = getX(leftBound, rightBound);\n    const xStep = width / xCursor.length;\n    const position = parseInt(clientX / xStep);\n    const positionName = xCursor[position];\n    const ordinates = getOrdinates(leftBound, rightBound);\n\n    const [yMin, yMax] = getBounds(ordinates.reduce((all, [name, , y]) => all.concat(y), []));\n\n    const yDelta = yMax - yMin;\n\n    setTooltip({\n      height,\n      clientX,\n      x:      position * xStep,\n      xLabel: positionName,\n      yMin,\n      yDelta,\n      dots:   ordinates.map(([name, stroke, y]) => [name, stroke, y[position]])\n        , //cursor.map(([name, stroke, y]) => [name, stroke, yMax - y[position]]),\n    });\n  };\n\n  function hideTooltip (e) {\n    return\n    setTooltip(null);\n  }\n\n  return (\n    <div className=\"tooltip-container\">\n      <Tooltip {...tooltip} />\n      <svg className=\"tooltip-catcher\" viewBox={`0 0 ${width} ${height}`} onMouseMove={showTooltip} onMouseOut={hideTooltip}>\n        {tooltip && <DisplayHoverAbscissa {...tooltip} />}\n      </svg>\n    </div>\n  )\n}\n","export  default createPathBuilder;\n\nfunction createPathBuilder(yMin, yMax, xLength, height, width){\n  const yDelta = yMax - yMin;\n  const yScale = height / yDelta;\n  const xScale = width / xLength;\n\n  return function (ordinates) {\n    const [[x, y], ...rest] = ordinates.map((ordinate, index) => {\n      return [index * xScale, (1 - (ordinate - yMin) / yDelta) * height]\n    });\n\n    return rest.reduce((d, [x, y]) => `${d} L ${x}, ${y}`, `M ${x},${y}`);\n//    ordinates.reduce((d, ordinate, i) => {\n//      return [i * xScale, ]\n//    })\n  }\n\n}\n","export default floorNumber;\n\nfunction floorNumber (_number_, add = 0) {\n  const n = _number_.toString();\n\n//  debugger\n  if(n.length === 1) {\n    return 0;\n  }\n\n  if(n.length === 2) {\n    return (Math.round(_number_ / 10) + add) * 10;\n\n  }\n\n\n  const divider = Math.pow(10, (Math.min(1, n.length - 2)));\n  const number = Math.round(_number_ / divider);\n\n  return (number + add) * divider;\n}\n\nexport function roundInterval(min, max) {\n/*\n  const delta = floorNumber(max - min);\n  const p = 0.01 * delta;\n*/\n\n\n}\n","import React, {\n  PureComponent,\n  useState,\n} from 'react';\nimport createPathBuilder from \"./createPathBuilder\";\nimport getBounds from \"../lib/getBounds\";\nimport floorNumber from \"./floorNumber\";\nimport * as PropTypes from \"prop-types\";\n\nconst fontSize = 15;\nconst gutter = 2;\n\nexport default class DrawCharts extends PureComponent {\n  render () {\n    let {width, height, getX, getOrdinates, leftBound, rightBound} = this.props;\n    if (!width) return null;\n\n    const ordinates = getOrdinates(leftBound, rightBound);\n\n    if (ordinates.length === 0) return null;\n\n    const [yMin, yMax] = getBounds(ordinates.reduce((all, [name, , y]) => all.concat(y), []));\n\n    let topBound = floorNumber(yMax, 1) + fontSize;\n\n    const bottomBound = floorNumber(yMin);\n    const yDelta = topBound - bottomBound;\n\n    const step = floorNumber(yDelta / 5);\n    const ordinatesAxis = new Array(6).fill(null).map(\n      (_, index) => bottomBound + step * index,\n    );\n\n    /*\n      if(topBound - ordinatesAxis[ordinatesAxis.length-1] > 0.5 * step) {\n        debugger\n        ordinatesAxis.push(ordinatesAxis[ordinatesAxis.length-1] + step);\n      }\n    */\n\n    topBound = ordinatesAxis[ordinatesAxis.length - 1];\n\n    const ordinatesLabels = ordinatesAxis.map(ordinate => [\n      ordinate,\n      Math.round((1 - (ordinate - bottomBound) / yDelta) * (height)),\n    ]);\n\n    /*\n      const [bottomBound, topBound] = getSteps(yMin, yMax);\n\n      const yDelta = topBound -  bottomBound;\n      const yStep = floorNumber(0.2 * yDelta);\n\n      let ordinatesAxis = [bottomBound];\n\n      while (ordinatesAxis[ordinatesAxis.length - 1] + yStep <= topBound) {\n        ordinatesAxis.push(ordinatesAxis[ordinatesAxis.length-1] + yStep);\n      }\n\n      const ordinatesLabels = ordinatesAxis.map(ordinate => {\n        return [ordinate, (1 - (ordinate - bottomBound) / yDelta) * height];\n      });\n\n    */\n    //\n\n//  const topBound = floorNumber(yMax, 1);\n//  const times = Math.max(2, Math.trunc(yMax / bottomBound));\n\n//const topBound = bottomBound * (times * bottomBound < yMax ? times + 1 : times);\n\n    const pathBuilder = createPathBuilder(bottomBound, topBound, rightBound - leftBound, height - fontSize - gutter, width);\n\n//  const pathBuilder = createPathBuilder(yMin, yMax, rightBound - leftBound, height - fontSize - gutter, width);\n\n    const xCaptions = createXCaptions(width, getX(leftBound, rightBound));\n\n    /*\n      const [tooltip, setTooltip] = useState(null);\n\n      const showTooltip = e => {\n        const {\n          clientX,\n        } = e;\n        const xCursor = x.slice(leftBound, rightBound + 1);\n        const xStep = width / xCursor.length;\n        const position = parseInt(clientX / xStep);\n        const positionName = xCursor[position];\n        const height = yMax - yMin;\n\n        setTooltip({\n          height,\n          clientX,\n          x:      position * xStep,\n          xLabel: positionName,\n          dots:   cursor.map(([name, stroke, y]) => [name, stroke, yMax - y[position]]),\n        });\n      };\n\n\n      function hideTooltip (e) {\n        setTooltip(null);\n      }\n    */\n\n    console.log('render charts');\n    return (\n      <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"none\">\n        {/*\n      <Tooltip {...tooltip} />\n*/}\n        {/*\n      <Axises {...{width, height, yMin, yMax, leftBound, rightBound}} />\n*/}\n        <g y={fontSize} style={{border: '1px solid silver'}}>\n          {\n            ordinates.map(([name, stroke, y]) => {\n//                  const y = dataSets.get(name).slice(leftBound).slice(0, rightBound-leftBound);\n              return (\n                <path key={name} d={pathBuilder(y)} fill=\"none\" strokeWidth={2} stroke={stroke}/>\n              )\n            })\n          }\n          {\n            ordinatesLabels.map(([label, ordinate]) => (\n              <>\n                <text x={15} y={ordinate - gutter} fontSize={fontSize}>{label}</text>\n                <path d={`M 0,${ordinate} H${width}`} stroke=\"silver\"/>\n              </>\n            ))\n          }\n\n        </g>\n\n        {/*<text x={15} y={fontSize} fontSize={fontSize}>{yMax}</text>*/}\n        {/*<text x={115} y={fontSize} fontSize={fontSize}>{topBound}</text>*/}\n\n        {/*<path d={`M 0,${height} H${width}`} stroke=\"silver\"/>*/}\n        {/*<text x={115} y={height - fontSize - gutter} fontSize={fontSize}>{bottomBound}</text>*/}\n\n\n\n\n\n\n        {/*\n      {tooltip && <DisplayHoverAbscissa {...tooltip} />}\n*/}\n      </svg>\n    );\n  }\n}\n\nDrawCharts.propTypes = {\n  children:     PropTypes.any,\n  width:        PropTypes.any,\n  height:       PropTypes.any,\n  getX:         PropTypes.any,\n  getOrdinates: PropTypes.any,\n  leftBound:    PropTypes.any,\n  rightBound:   PropTypes.any\n}\n\nfunction createXCaptions (abscissas) {\n\n}\n\nfunction getSteps (_min_, _max_) {\n  const delta = floorNumber(_max_ - _min_);\n  const dec = floorNumber(0.1 * delta);\n\n  let min = floorNumber(_min_);\n\n  if (dec === 0) {\n    return [min, Math.max(floorNumber(_max_, 1), min + delta)]\n  }\n\n  while (min > _min_) {\n    min = min - dec;\n  }\n\n  while (dec > 0 && dec < Math.abs(_min_ - min)) {\n    min = min + dec;\n  }\n\n  let max = min + 10 * dec;\n\n  while (max < _max_ && dec > 0) {\n    max = max + dec;\n  }\n\n  return [min, max];\n\n  /*\n    const min = floorNumber(_min_);\n    const delta = floorNumber(_max_ - _min_);\n  //debugger\n\n    let max = min + delta;\n    let step = floorNumber(delta / 5);\n     while (max < _max_) {\n       max  = max + step;\n     }\n\n     return [min, max];\n\n  /!*\n    if (_max_ - (min + delta) > step) {\n      return [min, min + delta + step];\n    } else {\n      return [min, min + delta];\n    }\n\n  *!/\n  */\n}\n","export default function compose (...fns) {\n  return function () {\n    return fns.reduceRight((args, fn) => [fn.apply(fn, args)], arguments);\n  }\n}\n","import React from 'react';\nimport compose from \"../lib/fns/compose\";\nimport './style.css';\n\nconst valueOf = event => parseInt(event.target.value);\n\nexport default Timeline;\n\nfunction Timeline ({timelinePath, width, getX, getOrdinates, setRightBound, setLeftBound, rightBound, leftBound}) {\n\n  if (!width) {\n    return null;\n  }\n  const x = getX();\n  const ordinates = getOrdinates();\n\n  if (ordinates.length === 0) {\n    return null;\n  }\n\n  const onChangeRightBound = compose(setRightBound, valueOf);\n  const onChangeLeftBound = compose(setLeftBound, valueOf);\n  const onChangeCursor = e => {\n    const value = valueOf(e);\n//console.log('change cursor', value)\n    setLeftBound(value);\n    setRightBound(value + rightBound - leftBound);\n  };\n\n  const timelineRef = React.createRef();\n\n  return (\n    <div className=\"timeline-view\" ref={timelineRef}>\n      {/*\n          TODO: https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/\n        */}\n        <style>{`\n          .timeline-view input[name=\"cursor\"]::-webkit-slider-thumb {\n            width: ${(100 * 1.70 * (rightBound - leftBound) / x.length)-4}%;\n          }`}\n        </style>\n      <div className=\"bounds\">\n        <input type=\"range\" name=\"leftBound\" min={0} max={-10 + rightBound}\n               value={Math.round(leftBound)}\n               onChange={onChangeLeftBound}\n                         style={{width: `${leftBound / x.length * 100}%`}}\n        />\n\n        <input type=\"range\" name=\"rightBound\" min={10 + leftBound} max={x.length}\n               value={Math.round(rightBound)}\n               onChange={onChangeRightBound}\n                       style={{width: `${100 * (x.length - leftBound) / x.length}%`}}\n        />\n      </div>\n      <input type=\"range\" name=\"cursor\" min={0} max={x.length - (rightBound - leftBound)} value={leftBound}\n             onChange={onChangeCursor}\n//                       style={{width: `${100 * (rightBound - leftBound) / x.length}%`}}\n      />\n\n\n      <svg viewBox={`0 0 ${width} ${100}`} preserveAspectRatio=\"none\">\n        {\n          ordinates.map(([name, stroke, y]) => {\n\n            return (\n              <path key={name} d={timelinePath(y)} fill=\"none\" stroke={stroke}/>\n            )\n          })\n        }\n      </svg>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport formatDate from \"../lib/formatDate\";\n\nconst fontSize = 15;\n\nexport default abscissa;\n\nfunction abscissa ({leftBound, rightBound, getX, width}) {\n  if (!width) {\n    return null;\n  }\n  const abscissas = getX();\n\n  const xDelta = rightBound - leftBound;\n  const step = Math.max(1, Math.round(0.2 * xDelta));\n\n  const labels = new Array(6).fill(leftBound)\n    .map((value, index) => value + step * index);\n\n  return (\n    <svg viewBox={`0 0 ${width} 20`}>\n      {\n        labels.map((labelIndex, index) => (\n      <text x={50 + index * 300} y={18} fontSize={fontSize}>{formatDate(abscissas[labelIndex])}</text>\n\n        ))\n      }\n    </svg>\n  )\n}\n","import DisplayLines from './displayLines';\n\nexport default DisplayLines;\n","import React, {\n  useLayoutEffect,\n  useState,\n} from 'react';\nimport getBounds from \"../lib/getBounds\";\n\n//import DisplayHoverAbscissa from \"./displayHoverAbscissa\";\nimport DrawTooltip from '../drawTooltip';\n//import Axises from './axises';\nimport DrawCharts from './drawCharts';\nimport createPathBuilder from \"./createPathBuilder\";\nimport Timeline from \"../Timeline/Timeline\";\nimport Abscissa from './abscissa';\n\nexport default displayLines;\n\nfunction displayLines ({dataSets, enabled, colors}) {\n  const x = dataSets.get('x');\n//  const xMin = x[0];\n//  const xMax = x[x.length-1];\n  const [yMin, yMax] = getBounds(enabled.reduce((all, name) => all.concat(dataSets.get(name)), []));\n  const chartRef = React.createRef();\n\n  const [leftBound, setLeftBound] = useState(Math.round((x.length)* 0.8));\n  const [rightBound, setRightBound] = useState(x.length);\n\n  const [width, setWidth] = useState(undefined);\n  const [height, setHeight] = useState(undefined);\n  const [chartHeight, setChartHeight] = useState(undefined);\n\n//  const pathBuilder = getPathBuilder(width / x.length, yMin, yMax, 100 / (yMax - yMin));\n\n\n  useLayoutEffect(() => {\n//    const timelineContainerStyle = window.getComputedStyle(timelineRef.current);\n    const chartContainerStyle = window.getComputedStyle(chartRef.current);\n\n    setWidth(parseInt(chartContainerStyle.width));\n    setHeight(parseInt(chartContainerStyle.height));\n    setChartHeight(parseInt(chartContainerStyle.height));\n  }, []);\n\n  function getX (leftBound = 0, rightBound = x.length - 1) {\n\n    return x.slice(leftBound, rightBound + 1);\n  }\n\n  function getOrdinates (leftBound = 0, rightBound = x.length - 1) {\n    return enabled.map(name => {\n      const y = dataSets.get(name).slice(leftBound, rightBound + 1);\n      const stroke = colors[name];\n\n      return [name, stroke, y];\n    })\n  }\n\n  const timelinePath = createPathBuilder(yMin, yMax, x.length, 100, width);\n\n//  debugger\n  return (\n    <div className=\"chart-view\">\n      <div className=\"large-view\" ref={chartRef}>\n        {/*<div className=\"chart-container\">*/}\n        <DrawTooltip\n          {...{width, height: chartHeight, leftBound, rightBound, getX, getOrdinates}}\n        />\n\n        <DrawCharts\n          {...{width, height: chartHeight, leftBound, rightBound, getX, getOrdinates}}\n        />\n\n\n\n      </div>\n\n      <Abscissa {...{leftBound, rightBound, getX, width}} />\n      <Timeline {...{timelinePath, width, getX, getOrdinates, enabled, setRightBound, setLeftBound, rightBound, leftBound}}/>\n\n    </div>\n  )\n}\n\nfunction getPathBuilder (xStep, yMin, yMax, yScale = 1) {\n//  console.log(xStep, yMin, yMax, yScale);\n  return pathBuilder;\n\n  /**\n   *\n   * @param {[number]} ordinates ordinates\n   * @return {string} path definition\n   */\n  function pathBuilder (ordinates) {\n    const toLow = ordinates.map(y => y - yMin);\n//    const inverse = toLow.map(y => yMax - y);\n\n    const [base, ...rest] = toLow;\n\n    const {d} = rest.reduce(({base, d}, y) => {\n      return {\n        base: y,\n        d:    `${d} l ${xStep},${yScale * (base - y)}`,\n      }\n    }, {base, d: `M 0,${yScale * (yMax - base)}`});\n\n    return d;\n  }\n}\n","import React, {\n  useEffect,\n  useState,\n} from \"react\";\nimport LineNames from \"../LineNames\";\nimport DisplayLines from '../displayLines';\nimport './style.css';\n\nconst createLinesMap = (valueMap, [name, ...values]) => valueMap.set(name, values);\n\nexport default chart;\n\nfunction chart ({accessor, active}) {\n  const [chart, setChart] = useState(accessor());\n\n  const {columns, names, /*types, */colors} = chart;\n\n  const [enabled, changeEnabled] = useState(Object.keys(names));\n\n  useEffect(() => {\n    const chart = accessor();\n\n    setChart(chart);\n    changeEnabled(() => Object.keys(chart.names));\n  }, [active]);\n\n  const dataSets = columns.reduce(createLinesMap, new Map());\n\n  return (\n    <>\n      <DisplayLines dataSets={dataSets} enabled={enabled} colors={colors}/>\n\n      <footer>\n\n        <LineNames colors={colors} enabled={enabled} names={names} onSwitch={changeEnabled}/>\n      </footer>\n    </>\n  );\n}\n","import Chart from './chart'\n\nexport default Chart;\n","import React from \"react\";\nimport compose from \"../lib/fns/compose\";\n\nconst itemRender = props => <button {...props}/>;\n\nexport default displayChartSelector;\n\nfunction displayChartSelector ({chartNames, onChange}) {\n  const itemProps = switcherProps(onChange);\n  const item = compose(itemRender, itemProps);\n\n  return chartNames.map(item);\n}\n\nfunction switcherProps (handler) {\n  return function (name, index) {\n    return {\n      key: index,\n      children: name,\n      onClick () {\n        handler(index)\n      },\n    }\n  }\n}\n\n","import React, {useState} from 'react';\nimport './App.css';\nimport Chart from './Chart';\nimport ChartSelector from './chartSelector';\n\nexport default app;\n\nconst chartNameBuilder = (chart, index) => `Chart #${index}`;\n\nfunction app ({data}) {\n  const [active, setActive] = useState(0);\n  const names = data.map(chartNameBuilder);\n  const accessor = () => data[active];\n\n  return (\n    <div className=\"App\">\n      <header onClick={() => console.log('header click')}>\n        <ChartSelector chartNames={names} onChange={setActive}/>\n      </header>\n\n      <main>\n        <Chart accessor={accessor} active={active}/>\n      </main>\n\n      <footer>\n        Switch theme\n      </footer>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport data                 from './mocks/chart_data';\n\nReactDOM.render(<App data={data}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}